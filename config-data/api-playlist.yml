server:
  port: ${PORT:0}

spring:
#Config Acceso a base de dato
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spotify-dev
    username: usr-spotify
    password: pwd-spotify
  jpa:
    hibernate.ddl-auto: update
    generate-ddl: true
    show-sql: true
#Config Zipkin
  zipkin:
    base-url: http://zipkin-container:9411 #En lugar de localhost, coloco el nombre del container de docker de zipkin
    enabled: true
    sender:
      type: rabbit
#Config RabbitMQ
  rabbitmq:
    addresses: rabbitmq-container:5672 #En lugar de localhost, coloco el nombre del container de docker de rabbitmq
    virtual-host: app_host
    username: guest
    password: guest

#Config Actuator
management:
  endpoints:
    web:
      exposure:
        include: circuitbreakers, circuitbreakerevents, health, info
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: true

#Config Resilience4j CircuitBreaker y Retry
resilience4j:
  circuitbreaker:
    instances:
      music:
        allowHeathIndicatorToFail: false
        registerHealthIndicator: true #Habilita a resilience4j a agregar info al endpoint health
        slidingWindowType: COUNT_BASED #CB se activa mediante un contador de eventos
        slidingWindowSize: 5 #Cantidad de fallas que tienen que ocurrir para que se pase al estado abierto
        failureRateThreshold: 50 #Porcentaje de fallas para que CB se active y pase al estado abierto
        waitDurationInOpenState: 15000 #Tiempo de permanencia en el estado abierto antes de pasar al estado medio-abierto
        permittedNumberOfCallsInHalfOpenState: 3 #Cantidad de llamadas en estado medio-abierto para determinar si pasa a estado cerrado o estado abierto
        automaticTransitionFromOpenToHalfOpenEnabled: true #Pasar√° al estado medio-abierto luego del tiempo de espera
  retry:
    instances:
      music:
        maxAttempts: 3
        waitDuration: 1000
        retryExceptions[0]: feign.FeignException$InternalServerError